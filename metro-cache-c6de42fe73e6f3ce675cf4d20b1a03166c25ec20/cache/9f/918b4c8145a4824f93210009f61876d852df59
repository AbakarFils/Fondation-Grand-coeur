__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/home/abakarfils/React_Native_project/firstApp/App.js",
      _class2,
      _temp2,
      _class3,
      _temp3;

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNavigation = _require(_dependencyMap[3], "react-navigation");

  var _Ionicons = _require(_dependencyMap[4], "@expo/vector-icons/Ionicons");

  var _Ionicons2 = _interopRequireDefault(_Ionicons);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    HomeScreen: {
      displayName: "HomeScreen"
    },
    EventScreen: {
      displayName: "EventScreen"
    },
    Calendrier: {
      displayName: "Calendrier"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/abakarfils/React_Native_project/firstApp/App.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var HomeScreen = _wrapComponent("HomeScreen")((_temp = _class = function (_React$Component) {
    _inherits(HomeScreen, _React$Component);

    function HomeScreen() {
      _classCallCheck(this, HomeScreen);

      return _possibleConstructorReturn(this, (HomeScreen.__proto__ || Object.getPrototypeOf(HomeScreen)).apply(this, arguments));
    }

    _createClass(HomeScreen, [{
      key: "render",
      value: function render() {
        var navigate = this.props.navigation.navigate;
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1,
              backgroundColor: 'white',
              justifyContent: 'center',
              alignItems: 'center'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 17
            }
          },
          _react3.default.createElement(_reactNative.Image, {
            source: _require(_dependencyMap[5], "./composant/icons/__firstladylauncher.gif"),
            style: {
              width: 500,
              height: 600
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 18
            }
          }),
          _react3.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 19
              }
            },
            "Home!"
          )
        );
      }
    }]);

    return HomeScreen;
  }(_react3.default.Component), _class.navigationOptions = {
    tabBarIcon: function tabBarIcon() {
      return _react3.default.createElement(_reactNative.Image, {
        source: _require(_dependencyMap[6], "./icons/home.png"),
        style: {
          width: 20,
          height: 20
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 11
        }
      });
    }
  }, _temp));

  var EventScreen = _wrapComponent("EventScreen")((_temp2 = _class2 = function (_React$Component2) {
    _inherits(EventScreen, _React$Component2);

    function EventScreen() {
      _classCallCheck(this, EventScreen);

      return _possibleConstructorReturn(this, (EventScreen.__proto__ || Object.getPrototypeOf(EventScreen)).apply(this, arguments));
    }

    _createClass(EventScreen, [{
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1,
              backgroundColor: '#6ddad3',
              justifyContent: 'center',
              alignItems: 'center'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            "Events Screen!"
          )
        );
      }
    }]);

    return EventScreen;
  }(_react3.default.Component), _class2.navigationOptions = {
    tabBarIcon: function tabBarIcon() {
      return _react3.default.createElement(_reactNative.Image, {
        source: _require(_dependencyMap[7], "./icons/calendar.png"),
        style: {
          width: 20,
          height: 20
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      });
    }
  }, _temp2));

  var StackNavigateur = (0, _reactNavigation.StackNavigator)({
    Accueil: {
      screen: HomeScreen
    }
  });

  var Calendrier = _wrapComponent("Calendrier")((_temp3 = _class3 = function (_React$Component3) {
    _inherits(Calendrier, _React$Component3);

    function Calendrier() {
      _classCallCheck(this, Calendrier);

      return _possibleConstructorReturn(this, (Calendrier.__proto__ || Object.getPrototypeOf(Calendrier)).apply(this, arguments));
    }

    _createClass(Calendrier, [{
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1,
              backgroundColor: 'white',
              justifyContent: 'center',
              alignItems: 'center'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 54
              }
            },
            "A chan da ! pour l'innstant j'ai fini avec le design "
          )
        );
      }
    }]);

    return Calendrier;
  }(_react3.default.Component), _class3.navigationOptions = {
    tabBarIcon: function tabBarIcon() {
      return _react3.default.createElement(_reactNative.Image, {
        source: _require(_dependencyMap[8], "./icons/event.png"),
        style: {
          width: 20,
          height: 20
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        }
      });
    }
  }, _temp3));

  exports.default = (0, _reactNavigation.TabNavigator)({
    Je: {
      screen: HomeScreen
    },
    taime: {
      screen: EventScreen
    },
    Haoua: {
      screen: Calendrier
    }
  }, {
    navigationOptions: function navigationOptions(_ref) {
      var navigation = _ref.navigation;
      return {
        tabBarIcons: function tabBarIcons(_ref2) {
          var focused = _ref2.focused,
              tintColro = _ref2.tintColro;
          var routeName = navigation.state.routeName;
          var iconName = void 0;

          if (routeName == 'Accueil') {
            iconName = 'home';
          } else if (routeName == 'evenement') {
            iconName = 'calendar';
          } else if (routeName == 'calendrier') {
            iconName = 'calendar';
          }

          return _react3.default.createElement(Ionicons, {
            name: iconName,
            size: 25,
            color: tintColor,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          });
        }
      };
    },
    tabBarOptions: {
      showIcon: true,
      pressColor: 'white',
      indicatorStyle: {
        height: 2,
        backgroundColor: "#FFF"
      },
      style: {
        backgroundColor: "#a2273C",
        borderTopWidth: 1,
        borderColor: "#3f101C"
      }
    },
    tabBarComponent: _reactNavigation.TabBarBottom,
    tabBarPosition: 'bottom',
    animationEnabled: false,
    swipeEnabled: false
  });
});